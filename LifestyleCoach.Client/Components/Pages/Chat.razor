@rendermode InteractiveServer
@page "/chat"
@inject IHttpClientFactory ClientFactory


<h3 class="mb-4">🧠 Chat with AI</h3>

<div class="mb-3">
    <textarea class="form-control" @bind="Prompt" rows="3" placeholder="Type your message..."></textarea>
</div>

<button type="button" class="btn btn-primary mb-3" @onclick="SendPrompt" disabled="@IsLoading">
    @(IsLoading ? "Thinking..." : "Send")
</button>

@if (Messages.Any())
{
    <div class="card p-3 bg-light">
        @foreach (var msg in Messages)
        {
            <div class="mb-2">
                <strong>@msg.Role:</strong>
                <div>@msg.Text</div>
            </div>
        }
    </div>
}

@code {
    private string Prompt = string.Empty;
    private bool IsLoading = false;

    private List<ChatMessage> Messages = new();

    private async Task SendPrompt()
    {
        if (string.IsNullOrWhiteSpace(Prompt))
        {
            Console.WriteLine("Prompt is empty.");
            return;
        }

        IsLoading = true;

        try
        {
            Messages.Add(new ChatMessage("User", Prompt));

            var http = ClientFactory.CreateClient("API");

            var response = await http.PostAsJsonAsync("chat", new ChatRequest { Prompt = Prompt });

            if (response.IsSuccessStatusCode)
            {
                var responseText = await response.Content.ReadAsStringAsync();
                Messages.Add(new ChatMessage("AI", responseText));
            }
            else
            {
                Messages.Add(new ChatMessage("System", $"Error: {response.StatusCode}"));
            }

            Prompt = string.Empty;
        }
        catch (Exception ex)
        {
            Messages.Add(new ChatMessage("System", $"Exception: {ex.Message}"));
        }
        finally
        {
            IsLoading = false;
        }
    }

    private class ChatRequest
    {
        public string Prompt { get; set; } = string.Empty;
    }

    private class ChatMessage
    {
        public string Role { get; set; }
        public string Text { get; set; }

        public ChatMessage(string role, string text)
        {
            Role = role;
            Text = text;
        }
    }
}
